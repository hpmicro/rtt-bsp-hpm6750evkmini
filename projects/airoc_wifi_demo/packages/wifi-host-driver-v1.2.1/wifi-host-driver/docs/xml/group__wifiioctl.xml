<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__wifiioctl" kind="group">
    <compoundname>wifiioctl</compoundname>
    <title>WHD Wi-Fi IOCTL Set/Get API</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wifiioctl_1gaf3e0da6e70350e204b9085808f98b173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="whd__types_8h_1add62f4b5040a2451e23869d2f9e1ae05" kindref="member">whd_result_t</ref></type>
        <definition>whd_result_t whd_wifi_set_ioctl_value</definition>
        <argsstring>(whd_interface_t ifp, uint32_t ioctl, uint32_t value)</argsstring>
        <name>whd_wifi_set_ioctl_value</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ioctl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sends an IOCTL command - CDC_SET IOCTL value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ioctl</parametername>
</parameternamelist>
<parameterdescription>
<para>CDC_SET - To set the I/O control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Data value to be sent</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ChuangJiaShy/Documents/01.SRC/repo/whd_mclass/whd/inc/whd_wifi_api.h" line="1383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifiioctl_1gaa9fd47570676f2a47d67d922a960f175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="whd__types_8h_1add62f4b5040a2451e23869d2f9e1ae05" kindref="member">whd_result_t</ref></type>
        <definition>whd_result_t whd_wifi_get_ioctl_value</definition>
        <argsstring>(whd_interface_t ifp, uint32_t ioctl, uint32_t *value)</argsstring>
        <name>whd_wifi_get_ioctl_value</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ioctl</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sends an IOCTL command - CDC_GET IOCTL value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ioctl</parametername>
</parameternamelist>
<parameterdescription>
<para>CDC_GET - To get the I/O control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to receive the data value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ChuangJiaShy/Documents/01.SRC/repo/whd_mclass/whd/inc/whd_wifi_api.h" line="1393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifiioctl_1ga0cda2f7b96d2b6beb99c397342cda324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="whd__types_8h_1add62f4b5040a2451e23869d2f9e1ae05" kindref="member">whd_result_t</ref></type>
        <definition>whd_result_t whd_wifi_set_ioctl_buffer</definition>
        <argsstring>(whd_interface_t ifp, uint32_t ioctl, void *buffer, uint16_t buffer_length)</argsstring>
        <name>whd_wifi_set_ioctl_buffer</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ioctl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>buffer_length</declname>
        </param>
        <briefdescription>
<para>Sends an IOCTL command - CDC_SET IOCTL buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ioctl</parametername>
</parameternamelist>
<parameterdescription>
<para>CDC_SET - To set the I/O control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle for a packet buffer containing the data value to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ChuangJiaShy/Documents/01.SRC/repo/whd_mclass/whd/inc/whd_wifi_api.h" line="1404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifiioctl_1gacafc79968242b824baaf63a419807d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="whd__types_8h_1add62f4b5040a2451e23869d2f9e1ae05" kindref="member">whd_result_t</ref></type>
        <definition>whd_result_t whd_wifi_get_ioctl_buffer</definition>
        <argsstring>(whd_interface_t ifp, uint32_t ioctl, uint8_t *out_buffer, uint16_t out_length)</argsstring>
        <name>whd_wifi_get_ioctl_buffer</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ioctl</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>out_length</declname>
        </param>
        <briefdescription>
<para>Sends an IOCTL command - CDC_GET IOCTL buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ioctl</parametername>
</parameternamelist>
<parameterdescription>
<para>CDC_GET - To get the I/O control </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to receive the handle for the packet buffer containing the response data value received </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of out_buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ChuangJiaShy/Documents/01.SRC/repo/whd_mclass/whd/inc/whd_wifi_api.h" line="1415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifiioctl_1ga851cf123cb495a37053dccc89ecdd522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="whd__types_8h_1add62f4b5040a2451e23869d2f9e1ae05" kindref="member">whd_result_t</ref></type>
        <definition>whd_result_t whd_wifi_get_iovar_buffer_with_param</definition>
        <argsstring>(whd_interface_t ifp, const char *iovar_name, void *param, uint32_t paramlen, uint8_t *out_buffer, uint32_t out_length)</argsstring>
        <name>whd_wifi_get_iovar_buffer_with_param</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iovar_name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>paramlen</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>out_length</declname>
        </param>
        <briefdescription>
<para>Sends an IOVAR command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iovar_name</parametername>
</parameternamelist>
<parameterdescription>
<para>SDPCM_GET - To get the I/O Variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Paramater to be passed for the IOVAR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paramlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Paramter length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to receive the handle for the packet buffer containing the response data value received </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of out_buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ChuangJiaShy/Documents/01.SRC/repo/whd_mclass/whd/inc/whd_wifi_api.h" line="1429" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Set and get IOCTL values. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
